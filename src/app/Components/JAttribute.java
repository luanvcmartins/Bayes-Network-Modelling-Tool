package app.Components;

import AIToolkit.Bayes.Net.BayesNetItem;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.event.MouseEvent;
import java.awt.geom.Ellipse2D;
import java.util.HashSet;

/**
 *
 * @author Luan
 */
public class JAttribute extends javax.swing.JPanel {

    private BayesNetItem item;
    private OnSetAsChild childEvents;
    private OnSetAsParentEventListener parentEvents;

    public JAttribute(BayesNetItem attr, int x, int y) {

        initComponents();
        this.item = attr;
        System.out.println("" + attr);
        this.setLocation(y, y);
        txtTitle.setText(attr.getTitle());
        setBounds(x, y, getPreferredSize().width, getPreferredSize().height);
    }

    /**
     * Creates new form JAttribute
     */
    public JAttribute() {
        initComponents();
    }

    public void setChildEvents(OnSetAsChild childEvents) {
        this.childEvents = childEvents;
    }

    public void setParentEvents(OnSetAsParentEventListener parentEvents) {
        this.parentEvents = parentEvents;
    }

    public String getTitle() {
        return item.getTitle();
    }

    public BayesNetItem getAttribute() {
        return item;
    }

    //
    private void childComponentBehavior(MouseEvent evt) {
        if (childEvents != null) {
            if (!childEvents.OnSetAsChild(item)) {
                childEvents.showParentRemover(item.getParents(), item);
            }
        }
    }

    /////////////////////////
    public interface OnSetAsParentEventListener {

        void OnStart(JAttribute jAttribute);
    }

    public interface OnSetAsChild {

        void showParentRemover(HashSet<BayesNetItem> parents, BayesNetItem me);

        boolean OnSetAsChild(BayesNetItem item);
    }

    @Override
    protected void paintComponent(Graphics grphcs) {
        super.paintComponent(grphcs);

        Graphics2D g2d = (Graphics2D) grphcs;
        g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING,
                RenderingHints.VALUE_ANTIALIAS_ON);
        g2d.setStroke(new BasicStroke(3));

        grphcs.setColor(Color.white);
        Ellipse2D.Double circle = new Ellipse2D.Double(4, 4, getSize().width - 10, getSize().height - 4);
        g2d.fill(circle);

        grphcs.setColor(Color.BLACK);
        grphcs.drawOval(4, 4, getSize().width - 10, getSize().height - 4);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtTitle = new javax.swing.JLabel();
        parentContainer = new javax.swing.JPanel();
        parentComponent = new javax.swing.JLabel();
        childContainer = new javax.swing.JPanel();
        childComponent = new javax.swing.JLabel();

        setCursor(new java.awt.Cursor(java.awt.Cursor.MOVE_CURSOR));
        setMaximumSize(new java.awt.Dimension(125, 116));
        setMinimumSize(new java.awt.Dimension(125, 116));
        setOpaque(false);

        txtTitle.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        txtTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtTitle.setText("Attribute Title");

        parentContainer.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 153, 153), null));
        parentContainer.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        parentContainer.setPreferredSize(new java.awt.Dimension(41, 18));

        parentComponent.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        parentComponent.setText("OUT");
        parentComponent.setToolTipText("<html>\nAttribute's \"childs\".<br>\n<b>Click</b> to create a draggable arrow.<br>\nUsing the draggable arrow, <b>click</b> in a attribute's <b>In</b> to <br>add this component as a parent.");
        parentComponent.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                parentComponentMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout parentContainerLayout = new javax.swing.GroupLayout(parentContainer);
        parentContainer.setLayout(parentContainerLayout);
        parentContainerLayout.setHorizontalGroup(
            parentContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(parentComponent, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
        );
        parentContainerLayout.setVerticalGroup(
            parentContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, parentContainerLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(parentComponent))
        );

        childContainer.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 153, 153), null));

        childComponent.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        childComponent.setText("IN");
        childComponent.setToolTipText("<HTML>\nAttribute's parents.<br>\n<b>Click</b> to remove parents.<br>\n<b>Click when dragging a arrow</b> to add as a parent.");
        childComponent.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        childComponent.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                childComponentMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout childContainerLayout = new javax.swing.GroupLayout(childContainer);
        childContainer.setLayout(childContainerLayout);
        childContainerLayout.setHorizontalGroup(
            childContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(childComponent, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
        );
        childContainerLayout.setVerticalGroup(
            childContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, childContainerLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(childComponent))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(parentContainer, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(childContainer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(childContainer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(txtTitle)
                .addGap(32, 32, 32)
                .addComponent(parentContainer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void parentComponentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_parentComponentMouseClicked
        if (parentEvents != null) {
            parentEvents.OnStart(this);
        }
    }//GEN-LAST:event_parentComponentMouseClicked

    private void childComponentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_childComponentMouseClicked
        childComponentBehavior(evt);
    }//GEN-LAST:event_childComponentMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel childComponent;
    private javax.swing.JPanel childContainer;
    private javax.swing.JLabel parentComponent;
    private javax.swing.JPanel parentContainer;
    private javax.swing.JLabel txtTitle;
    // End of variables declaration//GEN-END:variables
}
